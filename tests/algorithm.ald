# Permutations
class Permutaion
    def permute(self, nums_list)
        let result = []
        
        if len(nums_list) == 1:
            return [nums_list[:]]
        end
        in range(len(nums_list)) as i:
            let n = nums_list.pop(0)
            let perms = self.permute(nums_list)
            in perms as perm:
                perm.append(n)
            end
            result.append(perms)
            nums_list.append(n)
            print(nums_list)
        end
        return result
    end
end

let perm = Permutaion()
print(perm.permute([1, 2, 3])) # [[3, 2, 1], [2, 3, 1], [1, 3, 2], [3, 1, 2], [2, 1, 3], [1, 2, 3]]

let perm = Permutaion()
print(perm.permute([0,1])) # [[1, 0], [0, 1]]

let perm = Permutaion()
print(perm.permute([1])) # [[1]]
