let s_string = "ADOBECODEBANC"
let t_string = "ABC"
def @find_minimum_window(s,t)
    if s == "" or t == "":
        return ""
    end

    let countT, window = {}, {}

    in t as c:
        countT[c] = 1 + countT.get(c,0)
    end
     
    let have, need = 0, len(countT)
    let res, resLen = [-1, -1], float("infinity")
    let l, r = 0, 0

    for r = 0 to len(s):
        let c = s[r]
        window[c] = window.get(c,0) + 1
        if c in countT:
            if window[c] == countT[c]:
                have += 1
            end
        end
        while have == need:
            if r - l + 1 < resLen:
                res = [l, r]
                resLen = r - l + 1
            end
            window[s[l]] -= 1
            if s[l] in countT and window[s[l]] < countT[s[l]]:
                have -= 1
            end
            l += 1
        end
    end
    if resLen == float("infinity"):
        return "can't find"
    end
    return s[l:r+1]
end
print(@find_minimum_window(s_string, t_string))
# let l = [1,2]
# l += (3,4)
# print(l)