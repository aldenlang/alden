# # let name = "Kenny"
# # println(name.upperCase())
# let person = {
#     name: "Bob",
# }


# class A
#     @test = "Hello"
#     def @init(self, name)
#         self.name = name
#     end
#     def Test(self,*args,greeting,name)
#         println(args,greeting, name)
#     end
#     def toString(self)
#         return fm"Class %{self.name}"
#     end
# end

# let a = A("A name")
# a.Test("Hello", "World", name="Bob", greeting="Hi")
# #a.Test("Hi", "Kenny", "Bob", "Kenny")
# println(a.toString())





# class Car
#     def @init(self, manufacturer, weight, color, year)
#         self.manufacturer = manufacturer
#         self.weight = weight
#         self.color = color
#         self.year = year
#     end
#     def toString(self)
#         return fm"%{self.manufacturer} %{self.weight} %{self.color} %{self.year}"
#     end
# end

# let car1 = Car("Ford", "2000", "red", "2018")
# let car2 = Car("Honda", "1000", "blue", "2017")
# println(car1.toString())
# println(car2.toString())
# println(car1 == car2)

# def @Car(manufacturer, weight, color, year)
#     return fm"%{manufacturer} %{weight} %{color} %{year}"
# end

# # let car3 = @Car("Toyota", "2000", "red", "2018")
# # let car4 = @Car("Chevy", "1000", "blue", "2017")
# # println(car3)
# # println(car4)

# # Todo: work on varargs and keyword args
# def @join_sep(sep, *args, end_)
#     println(sep, args, end_)
#     let nums = ''
#     in args as arg:
#         nums += str(arg) + sep
#     end
#     return nums + end_
# end
# println(@join_sep('-', 1,2,3,4,5,6,7,8,9,10, end_ = '::'))

# let name, age = {
#     name: "Bob",
#     age: 20,
# }

# let d = dict(name = "Bob", age = 20, weight = "200")
# println(d)

let receipts = [
    {
        id: 1,
        name: 'Receipt 1',
        date: '01/01/2019',
        amount: '$100.00',
        category: 'Food',
        description: 'This is a description of the receipt for category Food',
    },
    {
        id: 2,
        name: 'Receipt 2',
        date: '01/01/2019',
        amount: '$200.00',
        category: 'Clothing',
        description: 'This is a description of the receipt for category Clothing',
    },
    {
        id: 3,
        name: 'Receipt 3',
        date: '01/01/2019',
        amount: '$300.00',
        category: 'Entertainment',
        description: 'This is a description of the receipt for category Entertainment',
    }
]

def @get_receipts()
    return receipts
end

def @get_receipt(id)
    return receipts.find(def (id) -> receipts.id == id)
end

def @add_receipt(receipt)
    receipt.id = receipts.length + 1
    receipts.append(receipt)
end

def @update_receipt(id, receipt)
    receipt.id = id
    let index = receipts.findIndex(def (receipt) -> receipt.id == id)
    receipts[index] = receipt
end

def @delete_receipt(id)
    let index = receipts.findIndex(def (receipt) -> receipt.id == id)
    receipts.splice(index, 1)
    return receipts
end


