# let name = "Kenny"
# println(name.upperCase())
let person = {
    name: "Bob",
}


class A
    @test = "Hello"
    def @init(self, name)
        self.name = name
    end
    def Test(self,greeting,name,*args)
        print(args,greeting, name)
    end
    def toString(self)
        return fm"Class %{self.name}"
    end
end

let a = A("A name")
a.Test("Hello", "World", name="Bob", greeting="Hi")
#a.Test("Hi", "Kenny", "Bob", "Kenny")
println(a.toString())

class Program
    # def @init(self)
    #     self.name = "Bob"
    # end
    def error()
        def @IllegalCharacterError(options)
            let error= fm"\nFile: %{options['pos_start'].fileName} at line %{options['pos_start'].line + 1}\n\nSyntaxError: Illegal character unexpected '%{options['originator']}'\n"
            Program.printError(error)
        end
        let methods = {
            'IllegalCharacterError': @IllegalCharacterError
        }
        return methods
    end
    def printError(self,error)
        println(error)
    end
end

print(Program.printError("this is an error"))

# Todo: varargs with keyword args
# def @main(*args, greeting, name)
#     println(args,greeting, name)
# end

# @main("Hello", "World", name="Bob", greeting="Hi")