# let number = 1_000_000
# let number2 = 1_000_000_000
# let number3 = 1_000_000_000_000
# let number4 = 123_456_789_123_456_789
# println(number, number2, number3, number4)

# task @countHowManyZeros(num) 
#     let count = 0
#     let new_num = str(num)
#     let num_list = num.split("_")
#     println(num_list)
# end

# println(@countHowManyZeros(number))

let DIGITS = '0123456789'
let LETTERS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
let SYMBOLS = '@_'
let num = 123
let num2 = 123.456
let LETTERS_SYMBOLS = LETTERS + SYMBOLS
let verfied = true
let list = [1, 2, 3, 4, 5, 6, 7, 8, '*', print, {name: 'rt'}]
let pair = (1, 2, 3, 4, 5, 6, 7, 8, 9, '*', print, {name: 'rt'})
println(fm"For String: %{LETTERS_SYMBOLS.includes('w'.strip())}")
let n = {name: 'rt'}
println(fm"For List: %{list.includes(n)}")
#println(fm"For Pair: %{pair.includes(print)}")
println(fm"For List2: %{print in list}")