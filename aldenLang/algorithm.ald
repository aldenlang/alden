line(1)
# Fibonacci series
def @fibonacci(num)
    for i 
    if num <= 1 :
        return num
    else:
        return @fibonacci(num - 1) + @fibonacci(num - 2)
    end
end

def @fibonacci(num)
    if num <= 1 :
        return num
    else:
        return @fibonacci(num - 1) + @fibonacci(num - 2)
    end
end

final num = @fibonacci(10)

println(num)


line(2)
# Bubble Sort
def @checkList(list)
    if  not list and list.isEmpty():
        return false
    end
    return true
end

def @bubblesort(list=[])
    # Check if the list is empty or the list are numbers
    if not @checkList(list):
        raise Exception(fm"Expected List, got '%{typeof(list)}'")
    else:
        if list.isNumber():
            for i = 0 to list.length:
                for j = 0 to list.length - 1:
                    if list[j] > list[j + 1]:
                        let temp = list[j]
                        list[j] = list[j + 1]
                        list[j + 1] = temp
                    end
                end
            end
        else:
            raise Exception(fm"Expected List of numbers")
        end
    end
    return list
end

let list = [5, 3, 8, 6, 2, 1, 4, 7]

println(list)
println(@bubblesort(list)) # [1, 2, 3, 4, 5, 6, 7, 8]
#  Copyright (c) 2021, Alden Authors.
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.

# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.

# 3. Neither the name of Alden Org. nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# File:
#   Memory/memory.py
# Author:
#   Kehinde Akinsanya
# Created:
#   October 28, 2021
# Description:
#   Memory module for Alden